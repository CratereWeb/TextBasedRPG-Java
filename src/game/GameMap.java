package game;

public class GameMap {
	
	private static final String ANSI_RESET = "\u001B[0m";
	
	private static final String ANSI_BLACK = "\u001B[30m";
	private static final String ANSI_RED = "\u001B[31m";
	private static final String ANSI_GREEN = "\u001B[32m";
	private static final String ANSI_YELLOW = "\u001B[33m";
	private static final String ANSI_BLUE = "\u001B[34m";
	private static final String ANSI_PURPLE = "\u001B[35m";
	private static final String ANSI_CYAN = "\u001B[36m";
	private static final String ANSI_WHITE = "\u001B[37m";
	private static final String ANSI_GREY = "\u001B[90m";
	private static final String ANSI_BRED = "\u001B[91m";
	private static final String ANSI_BGREEN = "\u001B[92m";
	private static final String ANSI_BYELLOW = "\u001B[93m";
	private static final String ANSI_BBLUE = "\u001B[94m";
	private static final String ANSI_BPURPLE = "\u001B[95m";
	private static final String ANSI_BCYAN = "\u001B[96m";
	private static final String ANSI_BWHITE = "\u001B[97m";
	
	private static final String ANSI_BLACK_BG = "\u001B[40m";
	private static final String ANSI_RED_BG = "\u001B[41m";
	private static final String ANSI_GREEN_BG = "\u001B[42m";
	private static final String ANSI_YELLOW_BG = "\u001B[43m";
	private static final String ANSI_BLUE_BG = "\u001B[44m";
	private static final String ANSI_PURPLE_BG = "\u001B[45m";
	private static final String ANSI_CYAN_BG = "\u001B[46m";
	private static final String ANSI_WHITE_BG = "\u001B[47m";
	private static final String ANSI_GREY_BG = "\u001B[100m";
	private static final String ANSI_BRED_BG = "\u001B[101m";
	private static final String ANSI_BGREEN_BG = "\u001B[102m";
	private static final String ANSI_BYELLOW_BG = "\u001B[103m";
	private static final String ANSI_BBLUE_BG = "\u001B[104m";
	private static final String ANSI_BPURPLE_BG = "\u001B[105m";
	private static final String ANSI_BCYAN_BG = "\u001B[106m";
	private static final String ANSI_BWHITE_BG = "\u001B[107m";
	
	private char[][] map = new char[55][36];
	private char[][] levelMap = new char[55][36];
	
	
	
	
	public GameMap (char[][] map, char[][] levelMap) {
		this.map = map;
		this.levelMap = levelMap;
	}
	
	public void initMap() {
		char[][] matrix = {
			{'≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','▲','╟','═','═','═','═','═','═','·','★'},
			{'≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','▲','║','·','·','·','·','·','·','†','║'},
			{'≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','▲','║','·','─','─','─','─','─','─','╢'},
			{'≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','X','▲','▲','▲','▲','▲','▲','║','·','·','·','·','·','·','·','║'},
			{'≈','≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','Q','±','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','╟','─','─','─','─','┬','┐','·','║'},
			{'≈','≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','║','·','·','·','·','│','│','·','║'},
			{'≈','≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','║','·','┌','┐','·','└','┘','·','║'},
			{'≈','≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','X','▲','▲','▲','▲','▲','║','·','│','│','·','·','·','·','║'},
			{'≈','≈','≈','≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','╚',' ','╧','╧','═','═','═','═','╝'},
			{'≈','≈','≈','≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','Q','†','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','Q','▲','▲','▲','▲','▲','▲','▲'},
			{'≈','≈','≈','≈','≈','±','≈','≈','≈','≈','♠','♠','♠','♠','♠','♠','·','·','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'},
			{'♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','X','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'},
			{'♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'},
			{'♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'},
			{'♣','♣','♣','♣','♣','♣','≈','±','≈','≈','≈','≈','≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'},
			{'♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'},
			{'♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','♠','♠','♠','♠','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'},
			{'♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'},
			{'♣','♣','♣','♣','♣','♣','·','·','Q','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','X','X','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'},
			{'♣','♣','♣','♣','♣','♣','·','†','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','X','X','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲'},
			{'♣','♣','♣','♣','♣','♣','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','X','X','X','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲'},
			{'♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','X','X','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','X','X','X','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲'},
			{'♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','X','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','X','X','X','·','·','≈','≈','≈','≈','≈','≈','▲','▲','▲'},
			{'♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','X','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','X','X','X','·','·','·','≈','≈','≈','≈','≈','±','≈','≈'},
			{'♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','·','X','X','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','X','X','X','·','·','·','·','·','·','≈','≈','≈','≈','≈'},
			{'♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','Q','·','X','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','X','X','·','·','·','·','·','·','·','·','·','≈','±','≈'},
			{'♣','♣','♣','·','·','·','·','·','·','·','·','·','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','·','·','X','≈','≈','≈','≈','≈','≈','≈','≈','≈','X','X','·','·','·','·','·','·','·','·','·','·','·','·','≈'},
			{'♣','·','·','·','·','·','·','·','·','·','·','·','·','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','·','X','≈','≈','≈','≈','≈','≈','≈','≈','X','X','·','·','·','·','·','·','·','·','·','·','·','·','·','≈'},
			{'═','═','═','═','═','═','═','═','═','═','═','═','═','╗','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','X','≈','≈','≈','≈','≈','≈','≈','≈','X','X','·','·','·','·','·','·','·','·','·','·','·','·','·','≈'},
			{'·','·','·','·','·','·','·','·','·','·','·','·','·','║','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','X','≈','≈','≈','≈','≈','≈','≈','≈','X','·','·','·','·','·','·','·','·','·','·','·','·','·','·','≈'},
			{'·','·','·','·','α','ε','·','ƒ','Ø','·','·','·','·','║','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','X','≈','≈','≈','≈','≈','≈','≈','X','X','·','·','·','·','·','·','·','·','·','·','·','·','≈','≈','≈'},
			{'·','·','·','·','·','·','·','·','·','·','·','·','·','║','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','X','≈','≈','≈','≈','≈','X','X','X','·','·','·','·','·','·','·','·','·','·','·','·','·','≈','≈','≈'},
			{'·','·','·','·','·','·','·','·','·','·','·','·','Q',' ','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','X','≈','≈','≈','±','X','X','·','·','·','†','Q','·','·','·','·','·','·','·','·','·','≈','≈','≈','≈'},
			{'·','·','·','·','·','·','·','·','·','·','·','·','·','║','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','X','≈','≈','≈','·','·','·','·','·','·','·','·','·','·','·','·','·','·','·','≈','≈','≈','≈','≈','≈'},
			{'·','·','†','·','·','·','·','·','$','·','·','·','·','║','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','X','≈','≈','≈','≈','≈','≈','≈','≈','≈','·','·','·','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈'},
			{'·','·','·','·','·','·','·','·','·','·','·','·','·','║','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','X','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈'}	
		};
		
		char[][] levelMatrix = {
			{3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,0,9,9,9,9,9,0,0,0,0,0,0,0,0,0,10,0},
			{3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,0,9,9,9,9,9,0,10,10,10,10,10,10,10,0,0,0},
			{3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,0,9,9,9,9,9,0,10,0,0,0,0,0,0,0,0,0},
			{3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,0,0,9,9,9,9,0,10,10,10,10,10,10,10,10,10,0},
			{3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,5,5,5,5,5,5,0,9,9,9,9,0,0,0,0,0,0,0,0,0,10,0},
			{3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,0,9,9,9,9,0,10,10,10,10,0,0,10,10,10,0},
			{3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,0,9,9,9,9,0,10,0,0,10,10,10,10,0,0},
			{3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,0,0,9,9,9,0,10,0,0,0,0,0,0,0,0,0},
			{3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
			{3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
			{3,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9},
			{2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,0,0,9,9,9,9,9,9,9,9,9,9,9,9,9},
			{2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,0,9,9,9,9,9,9,9,9,9,9,9,9,9},
			{2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,0,9,9,9,9,9,9,9,9,9,9,9,9,9},
			{2,2,2,2,2,2,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,0,9,9,9,9,9,9,9,9,9,9,9,9,9},
			{2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,0,9,9,9,8,9,9,9,9,8,8,9,9,9},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,0,8,8,8,8,8,8,8,8,8,8,8,8,8},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,0,8,8,8,8,8,8,8,8,8,8,8,8,8},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,0,8,8,8,8,8,8,8,8,8,8,8,8,8},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,8,8,8,8,8,8,8,8,8,8,8,8},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,3,3,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,8,8,8,8,8,8,8,8,8,8,8,8},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,8,8,8,8,8,8,8,8,8,8,8},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,8,8,8,8,8,8,8,8,8,8,8},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,8,8,8,8,8,8,8,8,0,8,8},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,0,0,6,6,6,6,6,6,6,6,6,6,6,0,0,0,8,8,8,8,8,8,8,8,8,8,8},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,6,6,6,6,6,6,0,0,8,8,8,8,8,8,8,8,8,8,0,8},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,6,6,6,6,0,0,8,8,8,8,8,8,8,8,8,8,8,8,8},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,6,6,6,0,0,7,7,7,8,8,8,8,8,8,8,8,8,8,8},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,6,6,6,0,0,7,7,7,7,7,8,8,8,8,8,8,8,8,8},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,6,6,6,0,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,6,6,0,0,7,7,7,7,7,7,7,7,7,8,8,8,7,7,8},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,6,6,0,0,0,7,7,7,7,7,7,7,7,7,7,7,8,8,7,7,7},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,0,0,0,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,6,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7}
		};
		
		this.map = matrix;
		this.levelMap = levelMatrix;
		
		System.out.println();
		
	}
	
	
	
	public char[][] getMap() {
		return this.map;
	}
	
	public char[][] getLevelMap() {
		return this.levelMap;
	}
		
	public void displayMap(int[] playerLocation) {
		int posY = 0;
		int posX;
		
		for(char[] y : this.map) {
			posY++;
			posX=0;
			for(char x : y) {
				posX++;
				//System.out.print(" ");
				if(playerLocation[0] == posX && playerLocation[1] == posY) {
					System.out.print(ANSI_RED_BG + " " + "@" + " " + ANSI_RESET);
				} else {
					switch(x) {
						case '♣': System.out.print(ANSI_GREEN_BG + " " + ANSI_BLACK + x + " " + ANSI_RESET);
						break;
						case '♠': System.out.print(ANSI_PURPLE_BG + " " + ANSI_BLACK + x + " " + ANSI_RESET);
						break;
						case '≈': System.out.print(ANSI_BLUE_BG + " " + ANSI_BLACK + x + " " + ANSI_RESET);
						break;
						case '▲': System.out.print(ANSI_CYAN_BG + " " + ANSI_BLACK + x + " " + ANSI_RESET);
						break;
						case 'Q': System.out.print(ANSI_YELLOW + " " + x + " " + ANSI_RESET);
						break;
						case '†': System.out.print(ANSI_WHITE_BG +  " " + ANSI_BLACK + x + " " + ANSI_RESET);
						break;
						case '±': System.out.print(ANSI_BLUE_BG + " " + ANSI_WHITE + x + " " + ANSI_RESET);
						break;
						case '═': System.out.print(ANSI_BLACK_BG + ANSI_WHITE + "===" + ANSI_RESET);
						break;
						case '╗': System.out.print(ANSI_BLACK_BG + ANSI_WHITE + "═╗ " + ANSI_RESET);
						break;
						case '·': System.out.print(ANSI_YELLOW_BG + " " + ANSI_BLACK + "·" + " " + ANSI_RESET);
						break;
						case 'X' : System.out.print(ANSI_BLACK_BG + " " + ANSI_WHITE + "X" + " " + ANSI_RESET );
						break;
						default: System.out.print(ANSI_BLACK_BG + " " + ANSI_WHITE + x + " " + ANSI_RESET);
					}
					//System.out.print(posX + "," + posY + " ");
					//System.out.print(x);
				}
				//System.out.print(" " + ANSI_RESET);
			}
			System.out.println();
			
		}
		System.out.println();
	}
	
	public void displayBlackMap(int[] playerLocation) {
		int posY = 0;
		int posX;
		
		for(char[] y : this.map) {
			posY++;
			posX=0;
			for(char x : y) {
				posX++;
				//System.out.print(" ");
				if(playerLocation[0] == posX && playerLocation[1] == posY) {
					System.out.print(ANSI_RED_BG + " " + "@" + " " + ANSI_RESET);
				} else {
					switch(x) {
						case '♣': System.out.print(ANSI_GREEN + " " + x + " " + ANSI_RESET);
						break;
						case '♠': System.out.print(ANSI_PURPLE + " " + x + " " + ANSI_RESET);
						break;
						case '≈': System.out.print(ANSI_BLUE + " " + x + " " + ANSI_RESET);
						break;
						case '▲': System.out.print(ANSI_CYAN + " " + x + " " + ANSI_RESET);
						break;
						case 'Q': System.out.print(ANSI_YELLOW + " " + x + " " + ANSI_RESET);
						break;
						case '†': System.out.print(ANSI_WHITE_BG +  " " + ANSI_BLACK + x + " " + ANSI_RESET);
						break;
						case '±': System.out.print(ANSI_BLUE_BG + " " + ANSI_WHITE + x + " " + ANSI_RESET);
						break;
						case '═': System.out.print(ANSI_BLACK + ANSI_WHITE + "═══" + ANSI_RESET);
						break;
						case '·': System.out.print(ANSI_WHITE + " " + "·" + " " + ANSI_RESET);
						break;
						case '─': System.out.print(ANSI_WHITE + "───" + ANSI_RESET);
						break;
						case '└': System.out.print(ANSI_WHITE + " └─" + ANSI_RESET);
						break;
						case '┘': System.out.print(ANSI_WHITE + "─┘ " + ANSI_RESET);
						break;
						case '┌': System.out.print(ANSI_WHITE + " ┌─" + ANSI_RESET);
						break;
						case '┐': System.out.print(ANSI_WHITE + "─┐ " + ANSI_RESET);
						break;
						case '┬': System.out.print(ANSI_WHITE + "─┬─" + ANSI_RESET);
						break;
						case '╟': System.out.print(ANSI_WHITE + " ╟─" + ANSI_RESET);
						break;
						case '╢': System.out.print(ANSI_WHITE + "─╢ " + ANSI_RESET);
						break;
						case '╗': System.out.print(ANSI_BLACK + ANSI_WHITE + "═╗ " + ANSI_RESET);
						break;
						case '╝': System.out.print(ANSI_BLACK + ANSI_WHITE + "═╝ " + ANSI_RESET);
						break;
						case '╚': System.out.print(ANSI_BLACK + ANSI_WHITE + " ╚═" + ANSI_RESET);
						break;
						case '╧': System.out.print(ANSI_WHITE + "═╧═" + ANSI_RESET);
						break;
						case 'X' : System.out.print(ANSI_BLACK + " " + "X" + " " + ANSI_RESET);
						break;
						case '★': System.out.print(ANSI_YELLOW_BG + ANSI_BLACK + " " + "★" + " " + ANSI_RESET);
						break;
						default: System.out.print(ANSI_WHITE + " " + x + " " + ANSI_RESET);
					}
					//System.out.print(posX + "," + posY + " ");
					//System.out.print(x);
				}
				//System.out.print(" " + ANSI_RESET);
			}
			System.out.println();
			
		}
		System.out.println();
	}
	
	public void displayLevelMap(int[] playerLocation) {
		int posY = 0;
		int posX;
		
		for(char[] y : this.levelMap) {
			posY++;
			posX=0;
			for(char x : y) {
				posX++;
				//System.out.print(" ");
				if(playerLocation[0] == posX && playerLocation[1] == posY) {
					System.out.print(ANSI_RED_BG + " " + "@" + " " + ANSI_RESET);
				} else {
					String xToString = Integer.toString(x);
					switch(x) {
						case 0: System.out.print(ANSI_BLACK + " " + xToString + " " + ANSI_RESET);
						break;
						case 1: System.out.print(ANSI_BGREEN + " " + xToString + " " + ANSI_RESET);
						break;
						case 2: System.out.print(ANSI_GREEN + " " + xToString + " " + ANSI_RESET);
						break;
						case 3: System.out.print(ANSI_BCYAN + " " + xToString + " " + ANSI_RESET);
						break;
						case 4: System.out.print(ANSI_CYAN + " " + xToString + " " + ANSI_RESET);
						break;
						case 5: System.out.print(ANSI_BBLUE + " " + xToString + " " + ANSI_RESET);
						break;
						case 6: System.out.print(ANSI_BLUE + " " + xToString + " " + ANSI_RESET);
						break;
						case 7: System.out.print(ANSI_BYELLOW + " " + xToString + " " + ANSI_RESET);
						break;
						case 8: System.out.print(ANSI_YELLOW + " " + xToString + " " + ANSI_RESET);
						break;
						case 9: System.out.print(ANSI_BRED + " " + xToString + " " + ANSI_RESET);
						break;
						case 10: System.out.print(ANSI_RED + " " + xToString + ANSI_RESET);
						break;
						default: System.out.print(ANSI_WHITE + " " + xToString + " " + ANSI_RESET);
					}
					//System.out.print(posX + "," + posY + " ");
					//System.out.print(" " + Integer.toString(x) + " ");
				}
				//System.out.print(" " + ANSI_RESET);
			}
			System.out.println();
			
		}
		System.out.println();
	}
	
	public void displayMapLegend() {
		
		System.out.print(
				ANSI_GREEN_BG + " " + ANSI_BLACK + '♣' + " " + "Forêt claire" + ANSI_RESET
		+ "\n" + ANSI_PURPLE_BG + " " + ANSI_BLACK + '♠' + " " + "Forêt pourpre" + ANSI_RESET
		+ "\n" + ANSI_BLUE_BG + " " + ANSI_BLACK + '≈' + " " + "Mer" + ANSI_RESET
		+ "\n" + ANSI_CYAN_BG + " " + ANSI_BLACK + '▲' + " " + "Montagnes" + ANSI_RESET
		+ "\n" + ANSI_YELLOW + " " + 'Q' + " " + "Quête" + ANSI_RESET
		+ "\n" + ANSI_WHITE_BG +  " " + ANSI_BLACK + '†' + " " + "Autel" + " " + ANSI_RESET
		+ "\n" + ANSI_BLUE_BG + " " + ANSI_WHITE + '±' + " " + "Bâteau" + " " + ANSI_RESET
		+ "\n" + ANSI_YELLOW_BG + " " + ANSI_BLACK + "·" + " " + "Sol désert" + ANSI_RESET
		+ "\n" + ANSI_BLACK_BG + " " + ANSI_WHITE + "X" + " " + "Falaise (infranchissable)" + ANSI_RESET
		+ "\n" + ANSI_BLACK_BG + " " + ANSI_WHITE + "= ╗ ║ ╟ ─ ┬ │ ┌ ┐ └ ┘" + " " + "Remparts & murs" + ANSI_RESET 
		);
		

		System.out.println();
	}
	
	public void displayBlackMapLegend() {
		
		System.out.print(
				ANSI_GREEN + " " + '♣' + " " + "Forêt claire" + ANSI_RESET
		+ "\n" + ANSI_PURPLE + " " + '♠' + " " + "Forêt pourpre" + ANSI_RESET
		+ "\n" + ANSI_BLUE + " " + '≈' + " " + "Mer" + ANSI_RESET
		+ "\n" + ANSI_CYAN + " " + '▲' + " " + "Montagnes" + ANSI_RESET
		+ "\n" + ANSI_YELLOW + " " + 'Q' + " " + "Quête" + ANSI_RESET
		+ "\n" + ANSI_WHITE_BG +  " " + ANSI_BLACK + '†' + " " + "Autel" + " " + ANSI_RESET
		+ "\n" + ANSI_BLUE_BG + " " + ANSI_WHITE + '±' + " " + "Bâteau" + " " + ANSI_RESET
		+ "\n" + ANSI_YELLOW + " " + "·" + " " + "Sol désert" + ANSI_RESET
		+ "\n" + ANSI_BLACK + " " + "X" + " " + "Falaise (infranchissable)" + ANSI_RESET
		+ "\n" + ANSI_WHITE + "= ╗ ║ ╟ ─ ┬ │ ┌ ┐ └ ┘" + " " + "Remparts & murs" + ANSI_RESET 
		);
		

		System.out.println();
	}
	
	public boolean isLocationAccessible(int[] location) {
		
		int nextLocationX = location[0];
		int nextLocationY = location[1];
		
		char mark = this.map[nextLocationX][nextLocationY];
	
		boolean isAccessible = true;
		
		switch(mark) {
			case 'X': 
			case '═': 
			case '╢':
			case '║':
			case '╟':
			case '╚':
			case '│':
			case '┌':
			case '└':
			case '┐':
			case '┘': 
			case '┬':
				isAccessible = false;
				break;
			case '≈': isAccessible = false; // Ajouter les conditions liés au lvl up
				break;
			default: isAccessible = true;	
		}
		
		return isAccessible;
		
	}
	
					
}

/*char[][] drawing = ['≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','╟','═','═','═','═','═','═','·','🌟'],
['≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','║','·','·','·','·','·','·','Ω','║'],
['≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','║','·','─','─','─','─','─','─','╢'],
['≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','║','·','·','·','·','·','·','·','║'],
['≈','≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','Q','±','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','╟','─','─','─','─','┬','┐','·','║'],
['≈','≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','║','·','·','·','·','│','│','·','║'],
['≈','≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','║','·','┌','┐','·','└','┘','·','║'],
['≈','≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','║','·','│','│','·','·','·','·','║'],
['≈','≈','≈','≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','╚',' ','╧','╧','═','═','═','═','╝'],
['≈','≈','≈','≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','Q','†','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','Q','▲','▲','▲','▲','▲','▲','▲'],
['≈','≈','≈','≈','≈','±','≈','≈','≈','≈','♣','♣','♣','♣','♣','♣','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'],
['♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','♣','≈','±','≈','≈','≈','≈','≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','♣','·','·','Q','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','♣','·','†','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','♣','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','▲','▲','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','▲','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','·','·','·','·','▲','▲','▲','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','▲','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','·','·','·','·','·','·','·','▲','▲','▲','▲'],
['♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','·','▲','▲','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','▲','·','·','·','·','·','·','·','·','·','·','·'],
['♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','Q','·','▲','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','·','·','·','·','·','·','·','·','·','·','·','·'],
['♣','♣','♣','·','·','·','·','·','·','·','·','·','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','·','·','▲','≈','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','·','·','·','·','·','·','·','·','·','·','·','·','·'],
['♣','·','·','·','·','·','·','·','·','·','·','·','·','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','·','▲','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','·','·','·','·','·','·','·','·','·','·','·','·','·','·'],
['═','═','═','═','═','═','═','═','═','═','═','═','═','╗','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','▲','≈','≈','≈','≈','≈','≈','≈','≈','▲','▲','·','·','·','·','·','·','·','·','·','·','·','·','·','·'],
['·','·','·','·','·','·','·','·','·','·','·','·','·','║','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','▲','≈','≈','≈','≈','≈','≈','≈','≈','▲','·','·','·','·','·','·','·','·','·','·','·','·','·','·','≈'],
['·','·','·','·','α','ε','·','ƒ','Ø','·','·','·','·','║','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','·','▲','≈','≈','≈','≈','≈','≈','≈','▲','▲','·','·','·','·','·','·','·','·','·','·','·','·','≈','≈','≈'],
['·','·','·','·','·','·','·','·','·','·','·','·','·','║','·','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','·','▲','≈','≈','≈','≈','≈','▲','▲','▲','·','·','·','·','·','·','·','·','·','·','·','·','·','≈','≈','≈'],
['·','·','·','·','·','·','·','·','·','·','·','·','Q',' ','·','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','▲','≈','≈','≈','±','▲','▲','·','·','·','†','Q','·','·','·','·','·','·','·','·','·','≈','≈','≈','≈'],
['·','·','·','·','·','·','·','·','·','·','·','·','·','║','·','·','·','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','▲','≈','≈','≈','·','·','·','·','·','·','·','·','·','·','·','·','·','·','·','≈','≈','≈','≈','≈','≈'],
['·','·','†','·','·','·','·','·','$','·','·','·','·','║','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','▲','≈','≈','≈','≈','≈','≈','≈','≈','≈','·','·','·','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈'],
['·','·','·','·','·','·','·','·','·','·','·','·','·','║','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','♣','▲','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈','≈'];
*/